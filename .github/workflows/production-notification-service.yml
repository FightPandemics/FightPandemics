name: Deploy Notification Service to Production

on:
  push:
    branches:
      - production
    paths:
      - services/notification/**
      - .github/workflows/production-notification-service.yml

env:
  AWS_DEFAULT_REGION: eu-west-1
  AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
  TF_VAR_aws_region: eu-west-1
  TF_VAR_fp_context: production

defaults:
  run:
    working-directory: ./services/notification

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.18.3
      - name: Install NPM dependencies
        run: cd src && npm install
      - name: Run unit tests
        run: cd src && npm run test

  deploy_production:
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.0
      - uses: actions/setup-node@v1
        with:
          node-version: 12.18.3

      - name: Install NPM dependencies
        run: cd src && npm install --production
      - name: Create Lambda build zip
        run: cd src && zip -r ../build.zip .
      - name: Create backend.tf
        run: |
          cat << EOF > ./deploy/backend.tf
          terraform {
            backend "s3" {
              bucket = "fp-production-terraform-state"
              region = "eu-west-1"
              key = "notification-service.tfstate"
            }
            required_version = "~> 0.13.0"
          }
          EOF
      - name: Terraform Init
        id: init
        run: terraform init -input=false deploy
      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -input=false deploy
      - name: Terraform Apply
        id: apply
        run: terraform apply -input=false tfplan
