name: staging

on:
  push:
    branches:
      - master
    paths:
      - backend/**
      - client/**
      - geo-service/**
      - main.tf
      - .github/workflows/**

jobs:
  build_images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - backend
          - client
          - geo-service
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - if: matrix.app == 'client'
        env:
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE: ${{ secrets.AIRTABLE_BASE }}
        run: >
          echo "REACT_APP_AIRTABLE_API_KEY=${AIRTABLE_API_KEY}" > ./client/.env
          echo "REACT_APP_AIRTABLE_BASE=${AIRTABLE_BASE}" >> ./client/.env
          cat .env
      - name: docker
        uses: docker/build-push-action@v1.0.1
        with:
          path: ./${{ matrix.app }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: fightpandemics/${{ matrix.app }}
          tags: staging
  deploy_staging:
    runs-on: ubuntu-latest
    needs: build_images
    steps:
      - uses: actions/checkout@v2
      - env:
          AUTH_SECRET_KEY: ${{ secrets.AUTH_SECRET_KEY }}
          AUTH_CLIENT_ID: ${{ secrets.AUTH_CLIENT_ID }}
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
        run: |
          cat << EOF > backend.tf
          terraform {
            backend "s3" {
              bucket = "fp-staging-terraform-state"
              region = "us-east-1"
              key = "staging.tfstate"
            }
          }
          EOF
      - run: cat backend.tf
      - run: cat main.tf
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'init'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'apply'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          TF_VAR_env_name: staging
          TF_VAR_fp_context: staging
          TF_VAR_auth_secret_key: ${{ secrets.AUTH_SECRET_KEY }}
          TF_VAR_auth_client_id: ${{ secrets.AUTH_CLIENT_ID }}
      - uses: ItsKarma/aws-cli@v1.70.0
        with:
          args: ecs update-service --cluster staging-cluster --service staging --force-new-deployment
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}

