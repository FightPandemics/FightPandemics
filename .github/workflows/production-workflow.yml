name: Deploy to Production

on:
  push:
    branches:
      - production
    paths:
      - backend/**
      - client/**
      - main.tf
      - .github/workflows/**
      - terraform-task-module/**

jobs:
  build_images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - backend
          - client
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - if: matrix.app == 'client'
        env:
          GTM_ID: ${{ secrets.PRODUCTION_GTM_ID }}
        run: >
          echo "REACT_APP_GTM_ID=${GTM_ID}" > ./client/.env
      - name: docker
        uses: docker/build-push-action@v1.0.1
        with:
          path: ./${{ matrix.app }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: fightpandemics/${{ matrix.app }}
          tags: production
  deploy_production:
    runs-on: ubuntu-latest
    needs: build_images
    steps:
      - uses: actions/checkout@v2
      - env:
          AWS_DEFAULT_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
        run: |
          cat << EOF > backend.tf
          terraform {
            backend "s3" {
              bucket = "fp-production-terraform-state"
              region = "eu-west-1"
              key = "production.tfstate"
            }
          }
          EOF
      - run: cat backend.tf
      - run: cat main.tf
      - id: get-git-commit
        name: Get git commit
        shell: bash
        run: echo "::set-output name=hash::$GITHUB_SHA"
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'init'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-west-1
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: latest
          tf_actions_subcommand: 'apply'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: eu-west-1
          TF_VAR_env_name: production
          TF_VAR_fp_context: production
          TF_VAR_commit_hash: ${{ steps.get-git-commit.outputs.hash }}
          TF_VAR_aws_region: eu-west-1
      - uses: ItsKarma/aws-cli@v1.70.0
        with:
          args: ecs update-service --cluster production-cluster --service production --force-new-deployment
        env:
          AWS_DEFAULT_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
